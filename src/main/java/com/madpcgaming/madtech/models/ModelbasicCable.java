// Date: 18.07.2013 21:23:11
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX

package com.madpcgaming.madtech.models;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

import com.madpcgaming.madtech.lib.Reference;
import com.madpcgaming.madtech.tileentitys.CableTE;

public class ModelbasicCable extends ModelBase
{
	// fields
	ModelRenderer	base;
	ModelRenderer	top;
	ModelRenderer	bottom;
	ModelRenderer	right;
	ModelRenderer	left;
	ModelRenderer	front;
	ModelRenderer	back;
	
	public ModelbasicCable()
	{
		
		textureWidth = 64;
		textureHeight = 64;
		
		base = new ModelRenderer(this, 0, 0);
		base.addBox(0F, 0F, 0F, 4, 4, 4);
		base.setRotationPoint(-2F, 14F, -2F);
		base.setTextureSize(64, 64);
		base.mirror = true;
		setRotation(base, 0F, 0F, 0F);
		top = new ModelRenderer(this, 0, 26);
		top.addBox(0F, 0F, 0F, 4, 6, 4);
		top.setRotationPoint(-2F, 8F, -2F);
		top.setTextureSize(64, 64);
		top.mirror = true;
		setRotation(top, 0F, 0F, 0F);
		bottom = new ModelRenderer(this, 20, 18);
		bottom.addBox(0F, 0F, 0F, 4, 6, 4);
		bottom.setRotationPoint(-2F, 18F, -2F);
		bottom.setTextureSize(64, 64);
		bottom.mirror = true;
		setRotation(bottom, 0F, 0F, 0F);
		right = new ModelRenderer(this, 0, 8);
		right.addBox(0F, 0F, 0F, 6, 4, 4);
		right.setRotationPoint(-8F, 14F, -2F);
		right.setTextureSize(64, 64);
		right.mirror = true;
		setRotation(right, 0F, 0F, 0F);
		left = new ModelRenderer(this, 16, 0);
		left.addBox(0F, 0F, 0F, 6, 4, 4);
		left.setRotationPoint(2F, 14F, -2F);
		left.setTextureSize(64, 64);
		left.mirror = true;
		setRotation(left, 0F, 0F, 0F);
		front = new ModelRenderer(this, 20, 8);
		front.addBox(0F, 0F, 0F, 4, 4, 6);
		front.setRotationPoint(-2F, 14F, -8F);
		front.setTextureSize(64, 64);
		front.mirror = true;
		setRotation(front, 0F, 0F, 0F);
		back = new ModelRenderer(this, 0, 16);
		back.addBox(0F, 0F, 0F, 4, 4, 6);
		back.setRotationPoint(-2F, 14F, 2F);
		back.setTextureSize(64, 64);
		back.mirror = true;
		setRotation(back, 0F, 0F, 0F);
	}
	
	public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
	{
		super.render(entity, f, f1, f2, f3, f4, f5);
		// setRotationAngles(f, f1, f2, f3, f4, f5);
		top.render(f5);
		bottom.render(f5);
		right.render(f5);
		left.render(f5);
		front.render(f5);
		back.render(f5);
	}
	
	public void renderModel(CableTE t, float f1)
	{
		base.render(f1);
		
		byte b = t.getSideConnections();
		boolean topb = (b & Reference.TOP) != 0;
		boolean bottomb = (b & Reference.BOTTOM) != 0;
		boolean leftb = (b & Reference.LEFT) != 0;
		boolean rightb = (b & Reference.RIGHT) != 0;
		boolean frontb = (b & Reference.FRONT) != 0;
		boolean backb = (b & Reference.BACK) != 0;
		// LogHelper.info("&&b: %d bools: top:%b bottom:%b left:%b right:%b front:%b back:%b",
		// b, topb, bottomb, leftb, rightb, frontb, backb);
		if (bottomb)
			bottom.render(f1);
		if (topb)
			top.render(f1);
		if (frontb)
			front.render(f1);
		if (backb)
			back.render(f1);
		if (leftb)
			left.render(f1);
		if (rightb)
			right.render(f1);
	}
	
	private void setRotation(ModelRenderer model, float x, float y, float z)
	{
		model.rotateAngleX = x;
		model.rotateAngleY = y;
		model.rotateAngleZ = z;
	}
	
	public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5)
	{
		super.setRotationAngles(f, f1, f2, f3, f4, f5, null);
	}
	
}
